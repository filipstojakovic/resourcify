version: "3.8"
name: resourcify

services:
  ################## KEYCLOAK ##################
  keycloak-postgres:
    image: postgres
    volumes:
      - keycloak_postgres_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_postgres_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "6543:5432"

  keycloak:
    image: docker.io/bitnami/keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_CREATE_ADMIN_USER: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: keycloak_postgres_db
      KEYCLOAK_DATABASE_USER: root
      KEYCLOAK_DATABASE_PASSWORD: root
      KEYCLOAK_IMPORT: /opt/bitnami/keycloak/data/import/realm-export.json
    volumes:
      - ./keycloak/realms:/opt/bitnami/keycloak/data/import
    depends_on:
      - keycloak-postgres
    entrypoint: '/opt/bitnami/keycloak/bin/kc.sh start-dev --import-realm'

  ################## API-GATEWAY ##################
  api-gateway:
    build: ./api-gateway
    ports:
      - '8083:8083'
    env_file:
      - ./api-gateway/.env
    environment:
      PORT: 8083
    depends_on:
      - user-service

  ################## RESOURCE-RESERVATION ##################
  resource-reservation:
    build: ./resource-reservation
    ports:
      - '8082:8082'
    env_file:
      - ./resource-reservation/.env
    environment:
      PORT: 8082
    depends_on:
      - keycloak

  resource-reservation-mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=resource_db
    volumes:
      - data:/data

    ################## USER-SERVICE ##################
  user-service:
    build: ./user-service
    ports:
      - '8084:8084'
    env_file:
      - ./user-service/.env
    environment:
      PORT: 8084
    depends_on:
      - keycloak

  ################## RABBITMQ ##################
  rabbitmq:
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672" # default rabbitmq port
      - "15672:15672" # UI management port
      - "15674:15674" # RabbitMQ STOMP (WebSocket) port
      - "61613:61613" # STOMP port
    volumes:
      - "./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins"

  ################## NOTIFICATION-SERVICE ##################
  notification-service:
    image: 'node:16.16-alpine'
    working_dir: '/home/node/app'
    command: 'sh -c "npm run start-docker"'
    ports:
      - '8000:8000'
    volumes:
      - ./notification-service:/home/node/app
    depends_on:
      - 'keycloak'
      - 'rabbitmq'

  ################## FRONTEND ##################
  frontend:
    image: 'node:16.16-alpine'
    working_dir: '/home/node/app'
    command: 'sh -c "npm run start-docker"'
    ports:
      - '4200:4200'
    volumes:
      - ./frontend-angular:/home/node/app
    depends_on:
      - 'keycloak'

volumes:
  data:
  keycloak_postgres_db:

